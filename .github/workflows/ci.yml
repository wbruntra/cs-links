name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    services:
      mariadb:
        image: mariadb:11.8-ubi9
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cs_linker_test
          MYSQL_USER: cs_linker
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Wait for MariaDB
      run: |
        until mysqladmin ping -h 127.0.0.1 -u root -proot; do
          echo "Waiting for MariaDB..."
          sleep 2
        done
    
    - name: Setup test database
      run: |
        mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS cs_linker_test;"
        mysql -h 127.0.0.1 -u root -proot -e "GRANT ALL PRIVILEGES ON cs_linker_test.* TO 'cs_linker'@'%';"
        mysql -h 127.0.0.1 -u root -proot -e "FLUSH PRIVILEGES;"
    
    - name: Run database migrations
      run: npm run migrate
      env:
        NODE_ENV: testing
        DB_HOST: 127.0.0.1
        DB_USER: cs_linker
        DB_PASSWORD: password
        DB_NAME: cs_linker_test
    
    - name: Run unit tests
      run: npm run test
      env:
        NODE_ENV: testing
        DB_HOST: 127.0.0.1
        DB_USER: cs_linker
        DB_PASSWORD: password
        DB_NAME: cs_linker_test
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        NODE_ENV: testing
        DB_HOST: 127.0.0.1
        DB_USER: cs_linker
        DB_PASSWORD: password
        DB_NAME: cs_linker_test
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t cs-linker:latest .
    
    - name: Test Docker container
      run: |
        docker run -d --name cs-linker-test -p 3000:3000 cs-linker:latest
        sleep 10
        curl -f http://localhost:3000 || exit 1
        docker stop cs-linker-test
        docker rm cs-linker-test
